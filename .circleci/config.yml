defaults: &defaults
  working_directory: ~/repo

version: 2
jobs:
  build-node-current:
    <<: *defaults
    docker:
      - image: circleci/node:current
    steps:
      - checkout
      - run: npm install && npm install mocha-junit-reporter --save-dev && npm run build
      - save_cache:
          key: v1-dependencies-{{ .Revision }}
          paths:
            - ./node_modules

  test-mysql-node-current:
    <<: *defaults
    docker:
      - image: circleci/node:current
      - image: killbill/killbill:0.22.15
        environment:
          - KILLBILL_DAO_URL=jdbc:mysql://127.0.0.1:3306/killbill
          - KILLBILL_DAO_USER=root
          - KILLBILL_DAO_PASSWORD=root
          - KILLBILL_SERVER_TEST_MODE=true
      - image: killbill/mariadb:0.22
        environment:
        - MYSQL_ROOT_PASSWORD=root
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ .Revision }}
      - run: sudo apt install -y curl mariadb-client
      - run:
          name: Setup DDL
          command: |
            set +e
            count=0
            until mysqladmin ping -h 127.0.0.1 -u root --password=root --silent; do
              if [[ "$count" == "25" ]]; then
                exit 1
              fi
              (( count++ ))
              printf '.'
              sleep 5
            done
            set -e
      - run:
          name: Setup Kill Bill
          command: |
            set +e
            count=0
            until $(curl --output /dev/null --silent --fail http://127.0.0.1:8080/1.0/healthcheck); do
              if [[ "$count" == "25" ]]; then
                exit 1
              fi
              (( count++ ))

              printf '.'
              sleep 5
            done
            set -e
            curl -v \
                 -X POST \
                 -u admin:password \
                 -H 'Content-Type: application/json' \
                 -H 'X-Killbill-CreatedBy: CircleCI' \
                 -d '{"apiKey": "bob", "apiSecret": "lazar"}' \
                 "http://127.0.0.1:8080/1.0/kb/tenants?useGlobalDefault=true"
      - run:
          name: Run tests
          command: ./node_modules/mocha/bin/mocha --reporter mocha-junit-reporter test/*.ts --require ts-node/register
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            cp ~/repo/test-results.xml ~/test-results/junit/
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
workflows:
  version: 2
  build-and-test:
    jobs:
      - build-node-current
      - test-mysql-node-current:
          requires:
            - build-node-current
